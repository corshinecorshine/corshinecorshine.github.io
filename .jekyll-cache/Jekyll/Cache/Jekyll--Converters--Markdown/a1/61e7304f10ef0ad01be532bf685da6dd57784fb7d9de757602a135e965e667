I"ì<blockquote>
  <p><strong>Any actions and or activities related to the material contained within this Website is solely your responsibility. This site contains materials that can be potentially damaging or dangerous. If you do not fully understand something on this site, then GO OUT OF HERE! Refer to the laws in your province/country before accessing, using,or in any other way utilizing these materials.These materials are for educational and research purposes only.</strong></p>
</blockquote>

<h2 id="summary"><strong><span style="color:#ff5555">Summary</span></strong></h2>
<hr />
<ul>
  <li>Download <strong>username.txt</strong> and <strong>password.txt</strong> from the room page.</li>
  <li>Enumerate the kerberos with <strong>kerbrute</strong>.</li>
  <li>Getting hash and crack with <strong>hashcat</strong>.</li>
  <li>Get in with <strong>smbclient</strong> to get <code class="language-plaintext highlighter-rouge">backup_credentials.txt</code>.</li>
  <li>Crack the bash with <strong>base64</strong>.</li>
  <li>Use <code class="language-plaintext highlighter-rouge">secretsdump.py</code> to dump credentials from <strong>backup@spookysec.local</strong>.</li>
  <li>Get in as <strong>Administrator</strong> with NTLM hash.</li>
</ul>

<h2 id="port-scan"><strong><span style="color:#ff5555">Port scan</span></strong></h2>
<hr />

<p>Run nmap is helpful to gather information about the target.</p>

<table>
  <tbody>
    <tr>
      <td>![]({{ ‚Äú/images/thm/attacktive-directory/nmap.png‚Äù</td>
      <td>relative_url }})</td>
    </tr>
  </tbody>
</table>

<p>Found DNS of the target is <code class="language-plaintext highlighter-rouge">spookysec.local</code>, add it to <strong>/etc/hosts</strong>, it‚Äôs a good practice to add the target machine into our <strong>/etc/hosts</strong>.</p>

<h2 id="check-the-website"><strong><span style="color:#ff5555">Check the website</span></strong></h2>
<hr />

<table>
  <tbody>
    <tr>
      <td>![]({{ ‚Äú/images/thm/attacktive-directory/website.png‚Äù</td>
      <td>relative_url }})</td>
    </tr>
  </tbody>
</table>

<p>I‚Äôm not going to look around because I hate <strong>windows</strong>‚Äôs interface.</p>

<p>By seeing nmap‚Äôs result, there are port that used for <code class="language-plaintext highlighter-rouge">Active Directory</code> which is <strong>389</strong>.</p>

<h2 id="enumeration"><strong><span style="color:#ff5555">Enumeration</span></strong></h2>
<hr />

<p>I ran <strong>enum4linux</strong> with <strong>-a</strong> flag for simple enumeration against the target to get list of users, machines, group &amp; member list, sharelist, etc.</p>

<table>
  <tbody>
    <tr>
      <td>![]({{ ‚Äú/images/thm/attacktive-directory/enum4linux.png‚Äù</td>
      <td>relative_url }})</td>
    </tr>
  </tbody>
</table>

<p>The username and password were given by the author of the room, no idea why.</p>

<p>I only need the potential username and I need to bruteforce the kerberos with <strong>kerbrute</strong> to get usernames.</p>

<h2 id="bruteforce-kerberos"><strong><span style="color:#ff5555">Bruteforce Kerberos</span></strong></h2>
<hr />

<blockquote>
  <p>Get the kerberos <a href="https://github.com/ropnop/kerbrute">here</a></p>
</blockquote>

<p>So I ran <strong>kerbrute</strong> to get potential real users in order to proceed to the next steps.</p>

<table>
  <tbody>
    <tr>
      <td>![]({{ ‚Äú/images/thm/attacktive-directory/kerbrute2.png‚Äù</td>
      <td>relative_url }})</td>
    </tr>
  </tbody>
</table>

<p>Next step is to get the password or bash for the user and with <code class="language-plaintext highlighter-rouge">GetPNUsers.py</code> from <strong>Impacket</strong>.</p>

<table>
  <tbody>
    <tr>
      <td>![]({{ ‚Äú/images/thm/attacktive-directory/gethash.png‚Äù</td>
      <td>relative_url }})</td>
    </tr>
  </tbody>
</table>

<h2 id="cracking"><strong><span style="color:#ff5555">Cracking</span></strong></h2>
<hr />

<p>Decided to decrypt it with <strong>hashcat</strong>, and got the cracked password to login with <strong>smb</strong>. <code class="language-plaintext highlighter-rouge">John</code> also can be used but I prefer <strong>hashcat</strong> because it quicker than john IMO.</p>

<table>
  <tbody>
    <tr>
      <td>![]({{ ‚Äú/images/thm/attacktive-directory/hashcat.png‚Äù</td>
      <td>relative_url }})</td>
    </tr>
  </tbody>
</table>

<p>After getting the credentials of svc-admin, I decided to check shared file as <code class="language-plaintext highlighter-rouge">svc-admin</code></p>

<h2 id="smbclient"><strong><span style="color:#ff5555">Smbclient</span></strong></h2>
<hr />

<p>There are multiple <strong>sharename</strong> and I selected one of those which <strong>backup</strong>.</p>

<table>
  <tbody>
    <tr>
      <td>![]({{ ‚Äú/images/thm/attacktive-directory/smbclient1.png‚Äù</td>
      <td>relative_url }})</td>
    </tr>
  </tbody>
</table>

<p>It turns out someone put <code class="language-plaintext highlighter-rouge">backup_credentials.txt</code> inside, and I can download it to my machine and read it.</p>

<table>
  <tbody>
    <tr>
      <td>![]({{ ‚Äú/images/thm/attacktive-directory/getbackupcreds.png‚Äù</td>
      <td>relative_url }})</td>
    </tr>
  </tbody>
</table>

<p>The file was encoded with base64, so I decrypt it immediately on  in order to get the password of the user.</p>

<table>
  <tbody>
    <tr>
      <td>![]({{ ‚Äú/images/thm/attacktive-directory/base64crack.png‚Äù</td>
      <td>relative_url }})</td>
    </tr>
  </tbody>
</table>

<h2 id="escalating-to-administrator"><strong><span style="color:#ff5555">Escalating to Administrator</span></strong></h2>
<hr />

<p>Now I have username and password, I decided to get <strong>Administrator</strong>‚Äôs hash with <code class="language-plaintext highlighter-rouge">secretsdump.py</code>, also from <strong>impacket</strong></p>

<table>
  <tbody>
    <tr>
      <td>![]({{ ‚Äú/images/thm/attacktive-directory/secretsdump.png‚Äù</td>
      <td>relative_url }})</td>
    </tr>
  </tbody>
</table>

<p>As of now I have the NTLM hash of the <strong>Administrator</strong>, I can just login with <code class="language-plaintext highlighter-rouge">evil-winrm</code>. and read the flag.</p>

<table>
  <tbody>
    <tr>
      <td>![]({{ ‚Äú/images/thm/attacktive-directory/roottxt.png‚Äù</td>
      <td>relative_url }})</td>
    </tr>
  </tbody>
</table>

<hr />

<table>
  <tbody>
    <tr>
      <td>![]({{ ‚Äú/images/mandatory/pwned.png‚Äù</td>
      <td>relative_url }})</td>
    </tr>
  </tbody>
</table>
:ET